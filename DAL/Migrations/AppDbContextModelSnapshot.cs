// <auto-generated />
using System;
using DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DAL.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.1");

            modelBuilder.Entity("Domain.Player", b =>
                {
                    b.Property<int>("PlayerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("PanelsAndShips")
                        .HasColumnType("TEXT");

                    b.Property<string>("StartingPanelsAndShips")
                        .HasColumnType("TEXT");

                    b.HasKey("PlayerId");

                    b.ToTable("Players");
                });

            modelBuilder.Entity("Domain.SavedGame", b =>
                {
                    b.Property<int>("SavedGameId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Height")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Moves")
                        .HasColumnType("TEXT");

                    b.Property<int?>("PlayerOnePlayerId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("PlayerTwoPlayerId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Width")
                        .HasColumnType("INTEGER");

                    b.Property<string>("WinningPlayer")
                        .HasColumnType("TEXT");

                    b.HasKey("SavedGameId");

                    b.HasIndex("PlayerOnePlayerId");

                    b.HasIndex("PlayerTwoPlayerId");

                    b.ToTable("SavedGames");
                });

            modelBuilder.Entity("Domain.SavedGame", b =>
                {
                    b.HasOne("Domain.Player", "PlayerOne")
                        .WithMany()
                        .HasForeignKey("PlayerOnePlayerId");

                    b.HasOne("Domain.Player", "PlayerTwo")
                        .WithMany()
                        .HasForeignKey("PlayerTwoPlayerId");

                    b.Navigation("PlayerOne");

                    b.Navigation("PlayerTwo");
                });
#pragma warning restore 612, 618
        }
    }
}
