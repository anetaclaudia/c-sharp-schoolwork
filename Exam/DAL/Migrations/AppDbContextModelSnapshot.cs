// <auto-generated />
using System;
using DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DAL.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.2");

            modelBuilder.Entity("Domain.Ingredient", b =>
                {
                    b.Property<int?>("IngredientId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Amount")
                        .HasColumnType("TEXT");

                    b.Property<string>("IngredientName")
                        .HasColumnType("TEXT");

                    b.Property<int?>("LocationId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("Unit")
                        .HasColumnType("INTEGER");

                    b.HasKey("IngredientId");

                    b.HasIndex("LocationId");

                    b.ToTable("Ingredient");
                });

            modelBuilder.Entity("Domain.IngredientInRecipe", b =>
                {
                    b.Property<int>("IngredientInRecipeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("AmountPerServing")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<int?>("RecipeId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("Unit")
                        .HasColumnType("INTEGER");

                    b.HasKey("IngredientInRecipeId");

                    b.HasIndex("RecipeId");

                    b.ToTable("IngredientInRecipes");
                });

            modelBuilder.Entity("Domain.Location", b =>
                {
                    b.Property<int?>("LocationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("LocationName")
                        .HasColumnType("TEXT");

                    b.HasKey("LocationId");

                    b.ToTable("Locations");
                });

            modelBuilder.Entity("Domain.Recipe", b =>
                {
                    b.Property<int?>("RecipeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Preparation")
                        .HasColumnType("TEXT");

                    b.Property<int?>("PreparationTime")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("RecipeCategory")
                        .HasColumnType("INTEGER");

                    b.Property<string>("RecipeName")
                        .HasColumnType("TEXT");

                    b.HasKey("RecipeId");

                    b.ToTable("Recipes");
                });

            modelBuilder.Entity("Domain.Ingredient", b =>
                {
                    b.HasOne("Domain.Location", "Location")
                        .WithMany("Ingredients")
                        .HasForeignKey("LocationId");

                    b.Navigation("Location");
                });

            modelBuilder.Entity("Domain.IngredientInRecipe", b =>
                {
                    b.HasOne("Domain.Recipe", "Recipe")
                        .WithMany("RecipeIngredients")
                        .HasForeignKey("RecipeId");

                    b.Navigation("Recipe");
                });

            modelBuilder.Entity("Domain.Location", b =>
                {
                    b.Navigation("Ingredients");
                });

            modelBuilder.Entity("Domain.Recipe", b =>
                {
                    b.Navigation("RecipeIngredients");
                });
#pragma warning restore 612, 618
        }
    }
}
